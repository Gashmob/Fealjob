{% extends 'page.html.twig' %}
{% block title %}Propositions de contrat{% endblock %}
{% block body %}
    <div class="contrats" style="margin-top: 20px;">
        <h2 class="ui center aligned header">
            <i class="arrow alternate circle down outline"></i>
            <div class="content">Propositions reçues</div>
        </h2>
        <div id="contratsList" class="ui segment stacked">
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="candidatures" style="margin-top: 20px;">
        <h2 class="ui center aligned header">
            <i class="paper plane outline"></i>
            <div class="content">Candidatures envoyées</div>
        </h2>
        <div id="candidaturesList" class="ui segment stacked items">
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script type='text/javascript'>
        window.addEventListener("DOMContentLoaded", (event) => {
            loadContrats();
            setTimeout(loadCandidatures, 2000);
        });

        // Charge les contrats dans la vue contrat et les affiche
        function loadContrats() {
            makeRequestByORSC('/particulier/get/propositions', displayContrats);
        }

        // Charge les candidatures dans la vue contrat et les affiche
        function loadCandidatures() {
            makeRequestByORSC('/particulier/get/candidatures', displayCandidatures);
        }

        /*
         * classe correspondant à l'item candidature dans la vue contrats
         */
        class Candidature {
            constructor(id, nom, rue, codePostal, ville, createdAt, date, description) {
                if (!nom.length > 0) nom = 'Annonce n°' + id;
                date = date.substr(0, 10).split('-');
                date = date[2] + '-' + date[1] + '-' + date[0];
                description = truncate(description, MAX_DESCRIPTION_LENGTH, true)
                let url = "{{ path('particulier_show_annonce', {'id': 1}) }}".slice(0, -1) + id;

                this.candidatureTemplate = `
                <div class="candidature ui item">
                    <div class="content">
                        <div class="ui left floated">
                            <div class="ui header small">${nom} à ${ville}</div>
                            <div class="meta">
                                <span class="date">Pour le ${date}</span>
                            </div>
                        <div class="description">${description}</div>
                        </div>
                        <div class="extra">
                            <div class="ui right floated buttons">
                                <button id="undoBtn${id}" class="ui red basic button undoBtn" onclick="requestUncandidate(${id})">Annuler</button>
                                <a href="${url}" class="ui blue basic button btnAccept">Voir</a>
                            </div>
                        </div>
                    </div>
                </div>`;
            }
        }

        // Demande à décandidater
        function requestUncandidate(id) {
            makeRequestByORSC('/particulier/uncandidate/' + id, displayUncandidate(id))
        }

        // Affiche la décandidature
        function displayUncandidate(id) {
            let btnNo = '#undoBtn' + id
            let btn = document.querySelector(btnNo)
            btn.innerHTML = 'Annulée'
        }

        // Affiche la liste des contrats dans la vue contrats
        const contratsList = document.getElementById('contratsList');

        function displayContrats() {
            //En cours de chargement
            if (httpRequest.readyState === XMLHttpRequest.LOADING) {
                contratsList.innerHTML = `<i class="notched circle loading icon"></i>`;
            }
            //Chargé
            else if (httpRequest.readyState === XMLHttpRequest.DONE) {
                if (httpRequest.status === 200) {
                    // stocke les résultats parsé en JSON dans une variable
                    results = JSON.parse(httpRequest.responseText)
                    // Réinitialise la liste
                    contratsList.innerHTML = '';

                    // Il n'y a pas de résultats :
                    if (results.propositions === undefined || results.propositions.length == 0) {
                        contratsList.innerHTML = `<h4 class="ui header">Pas de proposition de contrat.</h4>`;
                    }

                    // Il y a des résultats :
                    // Pour chaque cv du tableau propositions
                    results.propositions.forEach(a => {
                        let card = new ContratEvent(a.identity, a.nom, a.adresse.rue, a.adresse.codePostal, a.adresse.ville, a.createdAt, a.date, a.description);
                        contratsList.innerHTML += card.contratTemplate;
                    })
                } else {
                    contratsList.innerHTML = `<div>Il y a eu un problème avec la requête.</div>`;
                }
            }
        }

        // Affiche la liste des candidatures dans la vue contrats
        const candidaturesList = document.getElementById('candidaturesList');

        function displayCandidatures() {
            //En cours de chargement
            if (httpRequest.readyState === XMLHttpRequest.LOADING) {
                candidaturesList.innerHTML = `<i class="notched circle loading icon"></i>`;
            }
            //Chargé
            else if (httpRequest.readyState === XMLHttpRequest.DONE) {
                if (httpRequest.status === 200) {
                    // stocke les résultats parsé en JSON dans une variable
                    results = JSON.parse(httpRequest.responseText)
                    // Réinitialise la liste
                    candidaturesList.innerHTML = '';
                    // Il n'y a pas de résultats :
                    if (results.candidatures === undefined || results.candidatures.length == 0) {
                        candidaturesList.innerHTML = `<h4 class="ui header">Pas de candidatures.</h4>`;
                    }

                    // Il y a des résultats :
                    console.log(results.candidatures)
                    results.candidatures.forEach(candidature => {
                        let card = new Candidature(candidature.identity, candidature.nom, candidature.adresse.rue, candidature.adresse.codePostal, candidature.adresse.ville, candidature.createdAt, candidature.date, candidature.description);
                        candidaturesList.innerHTML += card.candidatureTemplate;
                    })
                } else {
                    candidaturesList.innerHTML = `<div>Il y a eu un problème avec la requête.</div>`;
                }
            }
        }


        // --------------- Pas encore utilisé -------------------
        function showModalAccept(contratID) {
            $('#modalAccept')
                .modal('setting', 'transition', 'fade up')
                .modal('show')
            ;
            $('.acceptBtn').click(function () {
                console.log('accepted ' + contratID)
                $('#modalAccept')
                    .modal('setting', 'transition', 'fade down')
                    .modal('hide')
                $('#proposition' + contratID).remove()
                ;
            })
        }

        function showModalDecline(contratID) {
            $('#modalDeny')
                .modal('setting', 'transition', 'fade up')
                .modal('show')
            ;
            $('.declineBtn').click(function () {
                console.log('refused ' + contratID)
                $('#modalDeny')
                    .modal('setting', 'transition', 'fade down')
                    .modal('hide')
                $('#proposition' + contratID).remove()
                ;
            })
        }
    </script>
{% endblock %}