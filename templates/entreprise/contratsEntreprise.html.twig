{% extends 'page.html.twig' %}
{% block title %}Propositions de contrat{% endblock %}
{% block body %}
    <div class="candidatures" style="margin-top: 20px;">
        <h2 class="ui center aligned green header">
            <div class="content">Candidatures reçues</div>
        </h2>
        <div id="candidaturesList" class="ui segment stacked divided items">
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="contrats" style="margin-top: 20px;">
        <h2 class="ui center aligned green header">
            <div class="content">Propositions envoyées</div>
        </h2>
        <div id="contratsList" class="ui segment stacked divided items">
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script type='text/javascript'>
        window.addEventListener("DOMContentLoaded", (event) => {
            loadCandidatures();
            loadContrats();
        });

        // Charge les candidatures dans la vue contrat et les affiche
        function loadCandidatures() {
            // /entreprise/get/my/candidatures
            // L'Employeur récupère toutes ses candidatures => {'candidatures': ['offre': OffreEmploi, 'employe': Employe]}
            $.ajax({
                url: '/entreprise/get/my/candidatures',
                type: 'POST',
                dataType: 'json',
                success: function (results) {
                    displayCandidatures(results)
                }
            });
        }

        // Charge les contrats dans la vue contrat et les affiche
        function loadContrats() {
            // /entreprise/get/my/propositions
            // L'Employeur récupère toutes ses propositions => {'propositions': ['offre': OffreEmploi, 'employe': Employe]}
            $.ajax({
                url: '/entreprise/get/my/propositions',
                type: 'POST',
                dataType: 'json',
                success: function (results) {
                    displayContrats(results)
                }
            });
        }

        /*
         * classe correspondant à l'item proposition de contrat affiché dans la vue contrats
         */
        class Contrat {
            constructor(id, nom, ville, updatedAt, debut, fin, description, prenomEmploye, nomEmploye, idEmploye, idCV) {
                if (!nom.length > 0) nom = 'Offre n°' + id;
                if (ville.length > 0) ville = ' à ' + ville;
                var date =''
                debut = debut.substr(0, 10).split('-');
                debut = debut[2] + '/' + debut[1] + '/' + debut[0];
                if (fin != undefined) {
                    fin = fin.substr(0, 10).split('-');
                    fin = fin[2] + '/' + fin[1] + '/' + fin[0];
                    date = `<span class="date">Du ${debut} au ${fin}</span>`
                } else {
                    date = `<span class="date">À partir du ${debut}</span>`
                }
                description = truncate(description, MAX_DESCRIPTION_LENGTH, true)
                var urlCVEmploye = "";
                var etatCV = "Voir CV";
                var etatCVButton = "";
                if (idCV != undefined) {
                    urlCVEmploye = "{{ path('entreprise_show_cv', {'id': 1}) }}".slice(0, -1) + idCV;
                }
                else {
                    urlCVEmploye = "#";
                    etatCV = "Pas de CV";
                    etatCVButton = "disabled";
                }

                this.contratTemplate = `
                <div class="contrat ui item">
                    <div class="content">
                        <div class="ui left floated">
                            <div class="ui header small">${nom}${ville} pour ${prenomEmploye} ${nomEmploye}</div>
                            <div class="meta">
                                ${date}
                            </div>
                        <div class="description">${description}</div>
                        </div>
                        <div class="extra">
                            <div class="ui right floated buttons">
                                <button id="undoBtn${id}to${idEmploye}" class="ui red basic button undoBtn" onclick="removeProposition(${id}, ${idEmploye})">Annuler</button>
                                <a href="${urlCVEmploye}" class="ui blue basic button btnAccept ${etatCVButton}">${etatCV}</a>
                            </div>
                        </div>
                    </div>
                </div>`;
            }
        }

        /*
         * classe correspondant à l'item candidature dans la vue contrats
         */
        class Candidature {
            constructor(id, nom, rue, codePostal, ville, createdAt, debut, fin, description, prenomEmploye, nomEmploye, idEmploye, idCV) {
                if (!nom.length > 0) nom = 'Offre n°' + id;
                if (ville.length > 0) ville = ' à ' + ville;
                var date =''
                debut = debut.substr(0, 10).split('-');
                debut = debut[2] + '/' + debut[1] + '/' + debut[0];
                if (fin != undefined) {
                    fin = fin.substr(0, 10).split('-');
                    fin = fin[2] + '/' + fin[1] + '/' + fin[0];
                    date = `<span class="date">Du ${debut} au ${fin}</span>`
                } else {
                    date = `<span class="date">À partir du ${debut}</span>`
                }
                description = truncate(description, MAX_DESCRIPTION_LENGTH, true)

                var urlCVEmploye = "";
                var etatCV = "Voir CV";
                var etatCVButton = "";
                if (idCV != undefined) {
                    urlCVEmploye = "{{ path('entreprise_show_cv', {'id': 1}) }}".slice(0, -1) + idCV;
                }
                else {
                    urlCVEmploye = "#";
                    etatCV = "Pas de CV";
                    etatCVButton = "disabled";
                }

                this.candidatureTemplate = `
                <div class="candidature ui item">
                    <div class="content">
                        <div class="ui left floated">
                            <div class="ui header small">${prenomEmploye} ${nomEmploye} pour ${nom}</div>
                            <div class="meta">
                                ${date}
                            </div>
                        <div class="description">${description}</div>
                        </div>
                        <div class="extra">
                            <div class="ui right floated buttons">
                                <button id="denyBtn${id}to${idEmploye}" class="ui red basic button denyBtn" onclick="refuseCandidature(${id}, ${idEmploye})">Refuser</button>
                                <button id="acceptBtn${id}to${idEmploye}" class="ui green basic button acceptBtn" onclick="acceptCandidature(${id}, ${idEmploye})">Accepter</button>
                                <a href="${urlCVEmploye}" class="ui blue basic button btnAccept ${etatCVButton}">${etatCV}</a>
                            </div>
                        </div>
                    </div>
                </div>`;
            }
        }

        // ----- Décandidature ----- //
        // Demande à décandidater
        function removeProposition(idO, idE) {
            // /entreprise/remove/proposition/{idO}/{idE}
            // L'Employeur supprime sa proposition d'OffreEmploi idO à l'Employe idE => {'result': boolean}
            $.ajax({
                url: '/entreprise/remove/proposition/' + idO + '/' + idE,
                type: 'POST',
                dataType: 'json',
                success: function () {
                    let btnNo = 'undoBtn' + idO +'to' + idE
                    let btn = document.getElementById(btnNo)
                    btn.innerHTML = 'Annulée'
                }
            });
        }

        // ----- Refus proposition contrat ----- //
        function refuseCandidature(idO, idE) {
            // /refuse/candidature/{idO}/{idE}
            // L'Employeur refuse la candidature de l'Employe idE sur l'OffreEmploi idO => {'result': boolean}
            $.ajax({
                url: '/entreprise/refuse/candidature/' + idO + '/' + idE,
                type: 'POST',
                dataType: 'json',
                success: function () {
                    let btnAcceptNo = 'acceptBtn' + idO + 'to' + idE
                    let btnDenyNo = 'denyBtn' + idO + 'to' + idE
                    let btnAccept = document.getElementById(btnAcceptNo)
                    let btnDeny = document.getElementById(btnDenyNo)
                    btnDeny.innerHTML = 'Refusée'
                    btnAccept.classList.add('disabled')
                    btnDeny.classList.add('disabled')
                }
            });
        }

        // ----- Acceptation proposition contrat ----- //
        // /entreprise/accept/candidature/{idO}/{idE}
        // L'Employeur accepte la candidature de l'Employe idE sur l'OffreEmploi idO => {'result': boolean}
        function acceptCandidature(idO, idE) {
            $.ajax({
                url: '/entreprise/accept/candidature/' + idO + '/' + idE,
                type: 'POST',
                dataType: 'json',
                success: function () {
                    let btnAcceptNo = 'acceptBtn' + idO + 'to' + idE
                    let btnDenyNo = 'denyBtn' + idO + 'to' + idE
                    let btnAccept = document.getElementById(btnAcceptNo)
                    let btnDeny = document.getElementById(btnDenyNo)
                    btnAccept.innerHTML = 'Acceptée'
                    btnAccept.classList.add('disabled')
                    btnDeny.classList.add('disabled')
                }
            });
        }

        // Affiche la liste des propositions de contrat envoyées dans la vue contrats
        const contratsList = document.getElementById('contratsList');

        function displayContrats(results) {
            // Réinitialise la liste
            contratsList.innerHTML = '';

            // Il n'y a pas de résultats :
            if (results.propositions == undefined || results.propositions.length == 0) {
                contratsList.innerHTML = `<div>Pas de proposition de contrat.</div>`;
            }

            console.log(results)

            // Il y a des résultats :
            results.propositions.forEach(proposition => {
                if (proposition.cv != undefined) {
                    let card = new Contrat(proposition.offre.identity, proposition.offre.nom, proposition.offre.lieu.ville, proposition.offre.updatedAt, proposition.offre.debut, proposition.offre.fin, proposition.offre.description, proposition.employe.prenom, proposition.employe.nom, proposition.employe.identity, proposition.cv.id);
                    contratsList.innerHTML += card.contratTemplate;
                }
                else {
                    let card = new Contrat(proposition.offre.identity, proposition.offre.nom, proposition.offre.lieu.ville, proposition.offre.updatedAt, proposition.offre.debut, proposition.offre.fin, proposition.offre.description, proposition.employe.prenom, proposition.employe.nom, null);
                    contratsList.innerHTML += card.contratTemplate;
                }
            })
        }

        // Affiche la liste des candidatures reçues dans la vue contrats
        const candidaturesList = document.getElementById('candidaturesList');

        function displayCandidatures(results) {
            // Réinitialise la liste
            candidaturesList.innerHTML = '';
            // Il n'y a pas de résultats :
            if (results.candidatures === undefined || results.candidatures.length == 0) {
                candidaturesList.innerHTML = `<div>Pas de candidatures.</div>`;
            }

            console.log(results)

            // Il y a des résultats :
            results.candidatures.forEach(candidature => {
                if (candidature.cv != undefined) {
                    let card = new Candidature(candidature.offre.identity, candidature.offre.nom, candidature.offre.lieu.rue, candidature.offre.lieu.codePostal, candidature.offre.lieu.ville, candidature.offre.createdAt, candidature.offre.debut, candidature.offre.fin, candidature.offre.description, candidature.employe.prenom, candidature.employe.nom, candidature.employe.identity, candidature.cv.id);
                    candidaturesList.innerHTML += card.candidatureTemplate;
                }
                else {
                    let card = new Candidature(candidature.offre.identity, candidature.offre.nom, candidature.offre.lieu.rue, candidature.offre.lieu.codePostal, candidature.offre.lieu.ville, candidature.offre.createdAt, candidature.offre.debut, candidature.offre.fin, candidature.offre.description, candidature.employe.prenom, candidature.employe.nom, candidature.employe.identity, null);
                    candidaturesList.innerHTML += card.candidatureTemplate;
                }
            })
        }
    </script>
{% endblock %}