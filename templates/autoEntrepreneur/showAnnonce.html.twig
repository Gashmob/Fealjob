{% extends 'page.html.twig' %}
{% block title %}Voir une annonce{% endblock %}
{% block body %}
    <style type="text/css">
        body {
            background-color: #fafbfc;
        }
    </style>
    <div style="position: relative;" class="ui text justified container">
        {% if not owner %}
            <a href="{{ path('particulier_annonces') }}" class="ui compact labeled icon button"
               style="position: absolute; top: 20px; left: -20px; transform: translateX(-100%);">
                <i class="left arrow icon"></i>
                Retour aux annonces
            </a>
        {% else %}
            <div class="ui buttons">
                <a href="{{ path('particulier_modifier_annonce', {'id': annonce.identity}) }}"
                   class="ui blue basic button">
                    Éditer
                </a>
                <a href="{{ path('particulier_delete_annonce', {'id': annonce.identity}) }}"
                   class="ui red basic button">
                    Supprimer
                </a>
            </div>
        {% endif %}
        <div class="ui segment annonce">
            <div class="ui two column grid annonce-header">
                <div class="column ten wide">
                    <h2 class="ui header">{{ annonce.nom }}</h2>
                    <div>
                        <div class="ui label">secteur activité</div>
                    </div>
                </div>
            </div>
            <div style="padding-top: 20px;" class="ui content annonce-content">
                <p>
                    <i class="icon map pin"></i>
                    {{ annonce.adresse.ville }}
                </p>
                <p>{{ annonce.adresse.rue }}</p>
                <p>{{ annonce.adresse.codePostal }}</p>
                <p>
                    <i class="icon calendar alternate"></i>
                    Pour le {{ annonce.date|date('d/m/Y') }}
                </p>
                {% if annonce.description|length %}
                    <p>
                        {# {% apply markdown_to_html %} #}
                        {{ annonce.description|nl2br }}
                        {# {% endapply %} #}
                    </p>
                {% else %}
                    <p class="meta">** L'utilisateur n'a pas renseigné de description **</p>
                {% endif %}
            </div>
            <!-- Location carte -->
            <div style="padding-top: 20px;" class="ui content annonce-location">
                <h3 class="ui dividing header">
                    <i class="icon map pin"></i>
                    <div class="content">Location sur la carte</div>
                </h3>
                <div>
                    <!--
                    décommenter
                    <div class="ui embed"
                         data-url="https://www.google.com/maps/embed/v1/place?q=université+savoie+mont+blanc&key=AIzaSyBFw0Qbyq9zTFTd-tUY6dZWTgaQzuU17R8">
                    </div>
                    -->
                </div>
            </div>
        </div>
        {% if app.session.get('userType') == 'AutoEntrepreneur' %}
            <button id="applyBtn" class="ui green button" onclick="apply()">
                Candidater
            </button>
        {% endif %}
    </div>
{% endblock %}
{% block javascripts %}
    <script type='text/javascript'>
        $('.ui.embed').embed();

        if (httpRequest == undefined) {
            let httpRequest
        }
        if (results == undefined) {
            let results
        }

        function apply() {
            httpRequest = new XMLHttpRequest();

            if (!httpRequest) {
                alert('Abandon :( Impossible de créer une instance de XMLHTTP');
                return false;
            }
            httpRequest.onreadystatechange = candidatureResponse;
            httpRequest.open('POST', '/particulier/candidate/{{ annonce.identity }}');
            httpRequest.send();
        }

        const applyBtn = document.querySelector("#applyBtn")

        function candidatureResponse() {
            //En cours de chargement
            if (httpRequest.readyState === XMLHttpRequest.LOADING) {
                applyBtn.innerHTML = `<i class="notched circle loading icon"></i>`;
            }
            //Chargé
            else if (httpRequest.readyState === XMLHttpRequest.DONE) {
                if (httpRequest.status === 200) {
                    // stocke les résultats parsé en JSON dans une variable
                    results = JSON.parse(httpRequest.responseText)
                    console.log(results)
                    // Candidature posée
                    if (results.result) {
                        applyBtn.innerHTML = '<div>Validé</div>';
                    }
                    // Candidature retirée
                    else {
                        applyBtn.innerHTML = '<div>Déjà candidaté</div>';
                    }
                } else {
                    applyBtn.innerHTML = `<div>Il y a eu un problème avec la requête.</div>`;
                }
            }
        }
    </script>
{% endblock %}