{% extends 'page.html.twig' %}
{% block title %}Résultats annonces{% endblock %}
{% block body %}
    <div style="margin-top: 20px  !important; margin-bottom: 40px;" class="ui justified container">
        <div style="margin-bottom: 20px;" class="ui right action left icon fluid input">
            <i class="search icon"></i>
            <input id="searchInput" type="text" placeholder="Rechercher">
            <div class="ui basic floating dropdown button">
                <div class="text">Tous les résultats</div>
                <i class="dropdown icon"></i>
                <div class="menu">
                    <div class="active item">Tous les résultats</div>
                    <div class="item">Offres d'emploi</div>
                    <div class="item">Candidats</div>
                    <div class="item">Auto-entrepreneurs</div>
                </div>
            </div>
            <div id="searchInput" class="ui button">Rechercher</div>
        </div>
        <div class="ui grid stackable">
            <div class="five wide left floated column">
                <div class="ui vertical menu">
                    <div class="item">
                        <div class="header">Distance max</div>
                        <div class="menu">
                            <div class="item" id="rangeLabel">Désactivé</div>
                            <div class="item"><input class="ui input" id="rangeInput" type="range" min="0" max="500" value="0" step="10"
                                                     oninput="updateRangeLabel(this.value);"></div>
                        </div>
                    </div>
                    <div class="item">
                        <div class="header">Secteur d'activité</div>
                        <div class="menu">
                            <div class="item">
                                <select class="ui dropdown" id="secteurSelect">
                                    <option value="">Choisir</option>
                                    {# {% for secteur in secteurs %}
                                        <option value="{{ secteur }}">{{ secteur }}</option>
                                    {% endfor %}  #}
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="eleven wide column">
                <div id="annoncesList" class="ui stackable cards">
                    <noscript>
                        <p>Veuillez activer JavaScript pour afficher les résultats en AJAX.</p>
                    </noscript>
                    {% for i in 0..6 %}
                        <div class="item">
                            <div class="image">
                                <div class="ui placeholder">
                                    <div class="square image"></div>
                                </div>
                            </div>
                            <div class="content">
                                <div class="ui placeholder">
                                    <div class="header">
                                        <div class="very short line"></div>
                                        <div class="short line"></div>
                                    </div>
                                    <div class="paragraph">
                                        <div class="ui placeholder">
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <!--<script type='text/javascript' src="{{ asset('js/annonceCard.js') }}"></script>-->
    <script type='text/javascript'>
        window.addEventListener("DOMContentLoaded", (event) => {
            makeRequest()
            searchInput.focus();
        });

        let httpRequest, results;
        //Cherche tous les résultats
        function makeRequest() {
            httpRequest = new XMLHttpRequest();

            if (!httpRequest) {
                alert('Abandon :( Impossible de créer une instance de XMLHTTP');
                return false;
            }
            httpRequest.onreadystatechange = displayAnnonces;
            httpRequest.open('POST', '/particulier/get/annonces');
            httpRequest.send();
        }

        //Cherche les résultats par le nom entré barre recherche
        function makeRequestFiltered(secteur, distanceMax, limit, offset) {
            httpRequest = new XMLHttpRequest();

            if (!httpRequest) {
                alert('Abandon :( Impossible de créer une instance de XMLHTTP');
                return false;
            }
            httpRequest.onreadystatechange = displayAnnonces;
            //let url = '/particulier/get/annonces';
            httpRequest.open('POST', '/particulier/get/annonces/' + secteur + '/' + distanceMax + '/' + limit + '/' + offset);
            httpRequest.send();
        }

        //Affiche les résultats dans 'annoncesList'
        const annoncesList = document.getElementById('annoncesList');

        //Classe AnnonceCard
        class AnnonceCard {
            constructor(id, nom, rue, codeP, ville, createdAt, date, description) {
                if (!nom.length > 0) nom = 'Annonce n°' + id;
                date = date.substr(0, 10).split('-');
                date = date[2] + '-' + date[1] + '-' + date[0];
                if (description.length > 0) description = truncate(description, MAX_DESCRIPTION_LENGTH, true)
                else description = "** Pas de description renseignée **";
                let url = "{{ path('particulier_show_annonce', {'id': 1}) }}".slice(0, -1) + id;

                this.cardTemplate = `
                <div class="card annonceCard">
                    <div class="content">
                        <div class="header">${nom}</div>
                        <div class="meta">
                            <li>
                                <i class="icon map pin"></i>
                                ${ville}
                            </li>
                            <li>
                                <i class="icon calendar"></i>
                                 Pour le ${date}
                            </li>
                        </div>
                        <div class="description">
                            <p>${description}</p>
                        </div>
                        <div class="extra">
                            <div class="ui label"><i class="globe icon"></i>Anglais</div>
                            <a href=${url}
                               class="ui right floated green button">
                                Voir l'annonce
                                <i class="right chevron icon"></i>
                            </a>
                        </div>
                    </div>
                </div>`;
            }
        }

        function displayAnnonces() {
            //En cours de chargement
            if (httpRequest.readyState === XMLHttpRequest.LOADING) {
                annoncesList.innerHTML = `<i class="notched circle loading icon"></i>`;
            }
            //Chargé
            else if (httpRequest.readyState === XMLHttpRequest.DONE) {
                if (httpRequest.status === 200) {
                    // stocke les résultats parsé en JSON dans une variable
                    results = JSON.parse(httpRequest.responseText)
                    console.log(results);
                    // Réinitialise la liste
                    annoncesList.innerHTML = '';

                    // Il n'y a pas de résultats :
                    if (results.annonces === undefined || results.annonces.length == 0) {
                        annoncesList.innerHTML = `<div>Pas de résultat trouvé.</div>`;
                    }

                    // Il y a des résultats :
                    // Pour chaque cv du tableau annonces
                    results.annonces.forEach(a => {
                        let card = new AnnonceCard(a.identity, a.nom, a.adresse.rue, a.adresse.codePostal, a.adresse.ville, a.createdAt, a.date, a.description);
                        annoncesList.innerHTML += card.cardTemplate;
                    })
                } else {
                    annoncesList.innerHTML = `<div>Il y a eu un problème avec la requête.</div>`;
                }
            }
        }

        const searchInput = document.getElementById('searchInput');
        searchInput.addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                searchAnnonces();
            }
        });

        function searchAnnonces() {
            let inputValue = searchInput.value;
            let distanceMax = 'none';
            let limit = 'none';
            let offset = 'none';
            inputValue = inputValue.trim();
            if (inputValue != undefined && inputValue.length > 0) {
                makeRequestFiltered(inputValue, distanceMax, limit, offset);
            } else {
                makeRequest();
            }
        }

        const MAX_DESCRIPTION_LENGTH = 300;

        // Tronque les descriptions
        function truncate(str, n, useWordBoundary
        ) {
            if (str.length <= n) {
                return str;
            }
            const subString = str.substr(0, n - 1); // the original check
            return (useWordBoundary
                ? subString.substr(0, subString.lastIndexOf(" "))
                : subString) + " &hellip;";
        };

        function addFav(e) {
            $(e).transition('pulse');
            if (e.classList.contains('yellow')) {
                e.classList.remove('yellow');
                e.classList.add('outline');
            } else {
                e.classList.add('yellow');
                e.classList.remove('outline');
            }
        };

        const rangeLabel = document.getElementById('rangeLabel');

        function updateRangeLabel(value) {
            if (value == 0) {
                rangeLabel.innerHTML = 'Désactivé';
            } else {
                rangeLabel.innerHTML = value + ' km.'
            }
            ;
        }
    </script>
{% endblock %}