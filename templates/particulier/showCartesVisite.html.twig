{% extends 'page.html.twig' %}
{% block title %}Cartes de visite{% endblock %}
{% block body %}
    <div style="margin-top: 20px  !important; margin-bottom: 40px;" class="ui justified container">
        <div style="margin-bottom: 20px;" class="ui right action left icon fluid input">
            <i class="search icon"></i>
            <input id="searchInput" type="text" placeholder="Rechercher">
            <div id="searchInput" class="ui button">Rechercher</div>
        </div>
        <div class="ui vertical segment stackable">
            <div class="ui vertical menu left floated">
                <div class="item">
                    <div class="header">Distance max</div>
                    <div class="menu">
                        <div class="item" id="rangeLabel">Désactivé</div>
                        <div class="item"><input class="ui input" id="rangeInput" type="range" min="0" max="300"
                                                 value="0" step="10"
                                                 oninput="updateRangeLabel(this.value);"></div>
                    </div>
                </div>
                <div class="item">
                    <div class="header">Secteur d'activité</div>
                    <div class="menu">
                        <div class="item">
                            <select class="ui dropdown" id="secteurSelect">
                                <option value="">Choisir</option>
                                {# {% for secteur in secteurs %}
                                        <option value="{{ secteur }}">{{ secteur }}</option>
                                    {% endfor %} #}
                            </select>
                        </div>
                    </div>
                </div>
                <div class="item">
                    <div class="header">Favoris</div>
                    <div class="menu">
                        <div class="item field">
                            <div class="ui toggle checkbox">
                                <input type="checkbox" name="favoris" class="hidden">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="item"></div>
            </div>
            <div class="ui center aligned">
                <div id="cartesVisiteList" class="ui two stackable cards">
                    <div class="card annonceCard">
                        <div class="content">
                            <a class="header">Pâtissier</a>
                            <div class="meta">
                                <span>
                                    <i class="icon map pin"></i>
                                    Aix-les-Bains,
                                </span>
                                <span>du 12/06 au 12/07</span>
                            </div>
                            <div class="description">
                                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Animi aperiam aut
                                    blanditiis delectus distinctio dolor dolorum ducimus molestiae, natus nostrum
                                    perspiciatis quaerat quam repellendus, sapiente vel veniam vitae. Iure, nihil.</p>
                            </div>
                            <div class="extra">
                                <div class="ui label">CDD</div>
                                <div class="ui label">CDI</div>
                                <div class="ui label"><i class="globe icon"></i>Anglais</div>
                                <a href="#"
                                   class="ui right floated green button">
                                    Voir l'annonce
                                    <i class="right chevron icon"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                    {% for i in 0..6 %}
                        <div class="item">
                            <div class="image">
                                <div class="ui placeholder">
                                    <div class="square image"></div>
                                </div>
                            </div>
                            <div class="content">
                                <div class="ui placeholder">
                                    <div class="header">
                                        <div class="very short line"></div>
                                        <div class="short line"></div>
                                    </div>
                                    <div class="paragraph">
                                        <div class="ui placeholder">
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                            <div class="line"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script type='text/javascript'>
        window.addEventListener("DOMContentLoaded", (event) => {
            makeRequestLoadAll()
            searchInput.focus();
        });

        if (httpRequest == undefined) {
            let httpRequest
        }
        if (results == undefined) {
            let results
        }

        //Cherche tous les résultats
        function makeRequestLoadAll() {
            httpRequest = new XMLHttpRequest();

            if (!httpRequest) {
                alert('Abandon :( Impossible de créer une instance de XMLHTTP');
                return false;
            }
            httpRequest.onreadystatechange = displayCartesVisite;
            httpRequest.open('POST', '/particulier/get/cartes');
            httpRequest.send();
        }

        //Cherche les résultats par le nom entré barre recherche
        function makeRequestFiltered(nom, secteur, distanceMax, limit, offset) {
            httpRequest = new XMLHttpRequest();

            if (!httpRequest) {
                alert('Abandon :( Impossible de créer une instance de XMLHTTP');
                return false;
            }
            httpRequest.onreadystatechange = displayCartesVisite;
            //let url = '/particulier/get/cartes';
            httpRequest.open('POST', '/particulier/get/cartes/' + nom + '/' + secteur + '/' + distanceMax + '/' + limit + '/' + offset);
            httpRequest.send();
        }

        //Affiche les résultats dans 'cartesVisiteList'
        const cartesVisiteList = document.getElementById('cartesVisiteList');
        //Classe carteVisiteCard
        class carteVisiteCard {
            constructor(id, prenom, nom, nomEntreprise, logoEntreprise, createdAt, description) {
                if (!nom.length > 0) nom = 'Carte n°' + id;
                if (description.length > 0) description = truncate(description, MAX_DESCRIPTION_LENGTH, true)
                else description = "** Pas de description renseignée **";
                let url = "{{ path('particulier_show_carte', {'id': 1}) }}".slice(0, -1) + id;

                this.cardTemplate = `
                <div class="card carteVisiteCard">
                    <i onclick="addFav(this);" class="icon star outline"></i>
                    <div class="content">
                        <div class="header">${prenom} ${nom}</div>
                        <div class="meta">
                            <li>
                                ${nomEntreprise}
                            </li>
                        </div>
                        <div class="description">
                            <p>${description}</p>
                        </div>
                        <div class="extra">
                            <a href=${url}
                               class="ui right floated green button">
                                Voir la carte
                                <i class="right chevron icon"></i>
                            </a>
                        </div>
                    </div>
                </div>`;
            }
        }

        function displayCartesVisite() {
            //En cours de chargement
            if (httpRequest.readyState === XMLHttpRequest.LOADING) {
                cartesVisiteList.innerHTML = `<i style="margin: 60px auto;" class="notched circle loading icon"></i>`;
            }
            //Chargé
            else if (httpRequest.readyState === XMLHttpRequest.DONE) {
                if (httpRequest.status === 200) {
                    // stocke les résultats parsé en JSON dans une variable
                    results = JSON.parse(httpRequest.responseText)
                    console.log(results);
                    // Réinitialise la liste
                    cartesVisiteList.innerHTML = '';

                    // Il n'y a pas de résultats :
                    if (results.cartes === undefined || results.cartes.length == 0) {
                        cartesVisiteList.innerHTML = `<div style="margin: 60px auto;">Pas de résultat trouvé.</div>`;
                    }

                    // Il y a des résultats :
                    // Pour chaque cv du tableau annonces
                    results.cartes.forEach(carte => {
                        let card = new carteVisiteCard(carte.id, carte.autoEntrepreneur.prenom, carte.autoEntrepreneur.nom, carte.autoEntrepreneur.nomEntreprise, carte.autoEntrepreneur.logo, carte.createdAt, carte.description);
                        cartesVisiteList.innerHTML += card.cardTemplate;
                    })
                } else {
                    cartesVisiteList.innerHTML = `<div style="margin: 60px auto;">Il y a eu un problème avec la requête.</div>`;
                }
            }
        }

        const searchInput = document.getElementById('searchInput');
        searchInput.addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                searchCartes();
            }
        });

        function searchCartes() {
            // String nom
            let nom = searchInput.value;
            // String secteur
            let secteur = 'none';
            // Float distance max
            let distanceMax = -1;
            // Int limit
            let limit = 25;
            // Int offset
            let offset = 0;
            nom = nom.trim();
            if (nom != undefined && nom.length > 0) {
                makeRequestFiltered(nom, secteur, distanceMax, limit, offset);
            } else {
                makeRequestLoadAll();
            }
        }

        // Tronque les descriptions
        function truncate(str, n, useWordBoundary
        ) {
            if (str.length <= n) {
                return str;
            }
            const subString = str.substr(0, n - 1); // the original check
            return (useWordBoundary
                ? subString.substr(0, subString.lastIndexOf(" "))
                : subString) + " &hellip;";
        };

        function addFav(e) {
            $(e).transition('pulse');
            if (e.classList.contains('yellow')) {
                e.classList.remove('yellow');
                e.classList.add('outline');
            } else {
                e.classList.add('yellow');
                e.classList.remove('outline');
            }
        };

        const rangeLabel = document.getElementById('rangeLabel');
        function updateRangeLabel(value) {
            if (value == 0) {
                rangeLabel.innerHTML = 'Désactivé';
            } else {
                rangeLabel.innerHTML = value + ' km.'
            }
            ;
        }
    </script>
{% endblock %}