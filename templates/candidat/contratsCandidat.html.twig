{% extends 'page.html.twig' %}
{% block title %}Propositions de contrat{% endblock %}
{% block body %}
    <div class="contrats" style="margin-top: 20px;">
        <h2 class="ui center aligned green header">
            <div class="content">Propositions reçues</div>
        </h2>
        <div id="contratsList" class="ui segment stacked divided items">
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="candidatures" style="margin-top: 20px;">
        <h2 class="ui center aligned green header">
            <div class="content">Candidatures envoyées</div>
        </h2>
        <div id="candidaturesList" class="ui segment stacked divided items">
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
            <div class="ui placeholder">
                <div class="image header">
                    <div class="short line"></div>
                    <div class="medium line"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script type='text/javascript'>
        window.addEventListener("DOMContentLoaded", (event) => {
            loadContrats();
            loadCandidatures();
        });

        // Charge les contrats dans la vue contrat et les affiche
        function loadContrats() {
            $.ajax({
                url: '/entreprise/get/propositions',
                type: 'POST',
                dataType: 'json',
                success: function (results) {
                    displayContrats(results)
                }
            });
        }

        // Charge les candidatures dans la vue contrat et les affiche
        function loadCandidatures() {
            $.ajax({
                url: '/entreprise/get/candidatures',
                type: 'POST',
                dataType: 'json',
                success: function (results) {
                    displayCandidatures(results)
                }
            });
        }

        /*
         * classe correspondant à l'item proposition de contrat affiché dans la vue contrats
         */
        class Contrat {
            constructor(id, nom, ville, updatedAt, debut, fin, description) {
                if (!nom.length > 0) {
                    nom = 'Offre n°' + id;
                }
                if (!ville.length > 0) {
                    ville = ''
                } else {
                    ville = ' à ' + ville;
                }

                var date =''
                debut = debut.substr(0, 10).split('-');
                debut = debut[2] + '/' + debut[1] + '/' + debut[0];
                if (fin != undefined) {
                    fin = fin.substr(0, 10).split('-');
                    fin = fin[2] + '/' + fin[1] + '/' + fin[0];
                    date = `<span class="date">Du ${debut} au ${fin}</span>`
                } else {
                    date = `<span class="date">À partir du ${debut}</span>`
                }
                description = truncate(description, MAX_DESCRIPTION_LENGTH, true)
                let url = "{{ path('entreprise_show_offre_emploi', {'id': 1}) }}".slice(0, -1) + id;

                this.contratTemplate = `
                <div class="contrat ui item">
                    <div class="content">
                        <div class="ui left floated">
                            <div class="ui header small">${nom}${ville}</div>
                            <div class="meta">
                                ${date}
                            </div>
                        <div class="description">${description}</div>
                        </div>
                        <div class="extra">
                            <div class="ui right floated buttons">
                                <button id="denyBtn${id}" class="ui red basic button denyBtn" onclick="requestDenyContrat(${id})">Refuser</button>
                                <button id="acceptBtn${id}" class="ui green basic button acceptBtn" onclick="requestAcceptContrat(${id})">Accepter</button>
                                <a href="${url}" class="ui blue basic button">Voir</a>
                            </div>
                        </div>
                    </div>
                </div>`;
            }
        }

        /*
         * classe correspondant à l'item candidature dans la vue contrats
         */
        class Candidature {
            constructor(id, nom, rue, codePostal, ville, createdAt, debut, fin, description) {
                if (!nom.length > 0) nom = 'Offre n°' + id;
                if (ville.length > 0) ville = ' à ' + ville;
                var date =''
                debut = debut.substr(0, 10).split('-');
                debut = debut[2] + '/' + debut[1] + '/' + debut[0];
                if (fin != undefined) {
                    fin = fin.substr(0, 10).split('-');
                    fin = fin[2] + '/' + fin[1] + '/' + fin[0];
                    date = `<span class="date">Du ${debut} au ${fin}</span>`
                } else {
                    date = `<span class="date">À partir du ${debut}</span>`
                }
                description = truncate(description, MAX_DESCRIPTION_LENGTH, true)
                let url = "{{ path('entreprise_show_offre_emploi', {'id': 1}) }}".slice(0, -1) + id;

                this.candidatureTemplate = `
                <div class="candidature ui item">
                    <div class="content">
                        <div class="ui left floated">
                            <div class="ui header small">${nom}${ville}</div>
                            <div class="meta">
                                ${date}
                            </div>
                        <div class="description">${description}</div>
                        </div>
                        <div class="extra">
                            <div class="ui right floated buttons">
                                <button id="undoBtn${id}" class="ui red basic button undoBtn" onclick="requestUncandidate(${id})">Annuler</button>
                                <a href="${url}" class="ui blue basic button btnAccept">Voir</a>
                            </div>
                        </div>
                    </div>
                </div>`;
            }
        }

        // ----- Décandidature ----- //
        // Demande à décandidater
        function requestUncandidate(id) {
            // L'Employe supprime sa candidature à l'OffreEmploi id => {'result': boolean}
            $.ajax({
                url: '/entreprise/uncandidate/' + id,
                type: 'POST',
                dataType: 'json',
                success: function () {
                    let btnNo = 'undoBtn' + id
                    let btn = document.getElementById(btnNo)
                    btn.innerHTML = 'Annulée';
                    btn.classList.add('disabled')
                }
            });
        }

        // ----- Refus proposition contrat ----- //
        // L'Employe refuse la proposition d'OffreEmploi id => {'result': boolean}
        function requestDenyContrat(id) {
            $.ajax({
                url: '/entreprise/refuse/proposition/' + id,
                type: 'POST',
                dataType: 'json',
                success: function () {
                    let btnDenyNo = 'denyBtn' + id
                    let btnAcceptNo = 'acceptBtn' + id
                    let btnAccept = document.getElementById(btnAcceptNo)
                    let btnDeny = document.getElementById(btnDenyNo)
                    btnDeny.innerHTML = 'Refusée'
                    btnAccept.classList.add('disabled')
                    btnDeny.classList.add('disabled')
                }
            });
        }

        // ----- Acceptation proposition contrat ----- //
        //  L'Employe accepte la proposition d'OffreEmploi id => {'result': boolean}
        function requestAcceptContrat(id) {
            $.ajax({
                url: '/entreprise/accept/proposition/' + id,
                type: 'POST',
                dataType: 'json',
                success: function () {
                    let btnAcceptNo = 'acceptBtn' + id
                    let btnDenyNo = 'denyBtn' + id
                    let btnAccept = document.getElementById(btnAcceptNo)
                    let btnDeny = document.getElementById(btnDenyNo)
                    btnAccept.innerHTML = 'Acceptée'
                    btnAccept.classList.add('disabled')
                    btnDeny.classList.add('disabled')
                }
            });
        }

        // Affiche la liste des contrats dans la vue contrats
        const contratsList = document.getElementById('contratsList');

        function displayContrats(results) {
            // Réinitialise la liste
            contratsList.innerHTML = '';

            // Il n'y a pas de résultats :
            if (results.propositions == undefined || results.propositions.length == 0) {
                contratsList.innerHTML = `<div>Pas de proposition de contrat.</div>`;
            }

            // Il y a des résultats :
            // Pour chaque proposition
            results.propositions.forEach(proposition => {
                let card = new Contrat(proposition.identity, proposition.nom, proposition.lieu.ville, proposition.updatedAt, proposition.debut, proposition.fin, proposition.description);
                contratsList.innerHTML += card.contratTemplate;
            })
        }

        // Affiche la liste des candidatures dans la vue contrats
        const candidaturesList = document.getElementById('candidaturesList');

        function displayCandidatures(results) {
            // Réinitialise la liste

            candidaturesList.innerHTML = '';
            // Il n'y a pas de résultats :
            if (results.candidatures === undefined || results.candidatures.length == 0) {
                candidaturesList.innerHTML = `<div>Pas de candidatures.</div>`;
            }

            // Il y a des résultats :
            results.candidatures.forEach(candidature => {
                let card = new Candidature(candidature.identity, candidature.nom, candidature.lieu.rue, candidature.lieu.codePostal, candidature.lieu.ville, candidature.createdAt, candidature.debut, candidature.fin, candidature.description);
                candidaturesList.innerHTML += card.candidatureTemplate;
            })
        }
    </script>
{% endblock %}